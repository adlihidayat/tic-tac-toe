import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [clickCount, setClickCount] = useState(1);
  const [winner, setWinner] = useState("");
  const [d1, setD1] = useState("");
  const [d2, setD2] = useState("");
  const [d3, setD3] = useState("");
  const [d4, setD4] = useState("");
  const [d5, setD5] = useState("");
  const [d6, setD6] = useState("");
  const [d7, setD7] = useState("");
  const [d8, setD8] = useState("");
  const [d9, setD9] = useState("");

  useEffect(() => {
    if (
      d1 !== "" &&
      ((d1 === d2 && d1 === d3) ||
        (d1 === d4 && d1 === d7) ||
        (d1 === d5 && d1 === d9))
    ) {
      setWinner(d1);
    } else if (
      d3 !== "" &&
      ((d3 === d6 && d3 === d9) || (d3 === d5 && d3 === d7))
    ) {
      setWinner(d3);
    } else if (d2 !== "" && d2 === d5 && d2 === d8) {
      setWinner(d2);
    } else if (d4 !== "" && d4 === d5 && d4 === d6) {
      setWinner(d4);
    } else if (d7 !== "" && d7 === d9 && d7 === d8) {
      setWinner(d7);
    } else if (
      d1 !== "" &&
      d2 !== "" &&
      d3 !== "" &&
      d4 !== "" &&
      d5 !== "" &&
      d6 !== "" &&
      d7 !== "" &&
      d8 !== "" &&
      d9 !== ""
    ) {
      setWinner("draw");
    }
  }, [d1, d2, d3, d4, d5, d6, d7, d8, d9]);

  const resetGame = () => {
    setD1("");
    setD2("");
    setD3("");
    setD4("");
    setD5("");
    setD6("");
    setD7("");
    setD8("");
    setD9("");
    setWinner("");
  };

  const s1 = () => {
    if (d1 === "" && winner === "") {
      if (clickCount % 2 === 0) {
        setD1("x");
      } else {
        setD1("o");
      }
      setClickCount(clickCount + 1);
    }
  };

  const s2 = () => {
    if (d2 === "" && winner === "") {
      if (clickCount % 2 === 0) {
        setD2("x");
      } else {
        setD2("o");
      }
      setClickCount(clickCount + 1);
    }
  };
  const s3 = () => {
    if (d3 === "" && winner === "") {
      if (clickCount % 2 === 0) {
        setD3("x");
      } else {
        setD3("o");
      }
      setClickCount(clickCount + 1);
    }
  };
  const s4 = () => {
    if (d4 === "" && winner === "") {
      if (clickCount % 2 === 0) {
        setD4("x");
      } else {
        setD4("o");
      }
      setClickCount(clickCount + 1);
    }
  };
  const s5 = () => {
    if (d5 === "" && winner === "") {
      if (clickCount % 2 === 0) {
        setD5("x");
      } else {
        setD5("o");
      }
      setClickCount(clickCount + 1);
    }
  };
  const s6 = () => {
    if (d6 === "" && winner === "") {
      if (clickCount % 2 === 0) {
        setD6("x");
      } else {
        setD6("o");
      }
      setClickCount(clickCount + 1);
    }
  };
  const s7 = () => {
    if (d7 === "" && winner === "") {
      if (clickCount % 2 === 0) {
        setD7("x");
      } else {
        setD7("o");
      }
      setClickCount(clickCount + 1);
    }
  };
  const s8 = () => {
    if (d8 === "" && winner === "") {
      if (clickCount % 2 === 0) {
        setD8("x");
      } else {
        setD8("o");
      }
      setClickCount(clickCount + 1);
    }
  };
  const s9 = () => {
    if (d9 === "" && winner === "") {
      if (clickCount % 2 === 0) {
        setD9("x");
      } else {
        setD9("o");
      }
      setClickCount(clickCount + 1);
    }
  };

  return (
    <>
      <Head>
        <title>tic tac toe</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col items-center justify-center space-y-20 w-screen h-screen">
        <h1 className=" text-3xl font-semibold">TIC TAC TOE</h1>
        <div className="grid grid-cols-3 w-64 h-64 md:w-[800px] md:h-[800px]">
          <div
            onClick={s1}
            className=" w-auto h-auto  border md:border-4 border-black flex items-center justify-center"
          >
            {d1 !== "" && (
              <p
                className={` text-4xl md:text-6xl ${
                  d1 === "x" ? "text-blue-500" : "text-red-500"
                }`}
              >
                {d1}
              </p>
            )}
          </div>
          <div
            onClick={s2}
            className=" w-auto h-auto border md:border-4 border-black flex items-center justify-center"
          >
            {d2 !== "" && (
              <p
                className={` text-4xl md:text-6xl ${
                  d2 === "x" ? "text-blue-500" : "text-red-500"
                }`}
              >
                {d2}
              </p>
            )}
          </div>
          <div
            onClick={s3}
            className=" w-auto h-auto  border md:border-4 border-black flex items-center justify-center"
          >
            {d3 !== "" && (
              <p
                className={` text-4xl md:text-6xl ${
                  d3 === "x" ? "text-blue-500" : "text-red-500"
                }`}
              >
                {d3}
              </p>
            )}
          </div>
          <div
            onClick={s4}
            className=" w-auto h-auto border md:border-4 border-black flex items-center justify-center"
          >
            {d4 !== "" && (
              <p
                className={` text-4xl md:text-6xl ${
                  d4 === "x" ? "text-blue-500" : "text-red-500"
                }`}
              >
                {d4}
              </p>
            )}
          </div>
          <div
            onClick={s5}
            className=" w-auto h-auto border md:border-4 border-black flex items-center justify-center"
          >
            {d5 !== "" && (
              <p
                className={` text-4xl md:text-6xl ${
                  d5 === "x" ? "text-blue-500" : "text-red-500"
                }`}
              >
                {d5}
              </p>
            )}
          </div>
          <div
            onClick={s6}
            className=" w-auto h-auto border md:border-4 border-black flex items-center justify-center"
          >
            {d6 !== "" && (
              <p
                className={` text-4xl md:text-6xl ${
                  d6 === "x" ? "text-blue-500" : "text-red-500"
                }`}
              >
                {d6}
              </p>
            )}
          </div>
          <div
            onClick={s7}
            className=" w-auto h-auto border md:border-4 border-black flex items-center justify-center"
          >
            {d7 !== "" && (
              <p
                className={` text-4xl md:text-6xl ${
                  d7 === "x" ? "text-blue-500" : "text-red-500"
                }`}
              >
                {d7}
              </p>
            )}
          </div>
          <div
            onClick={s8}
            className=" w-auto h-auto border md:border-4 border-black flex items-center justify-center"
          >
            {d8 !== "" && (
              <p
                className={` text-4xl md:text-6xl ${
                  d8 === "x" ? "text-blue-500" : "text-red-500"
                }`}
              >
                {d8}
              </p>
            )}
          </div>
          <div
            onClick={s9}
            className=" w-auto h-auto border md:border-4 border-black flex items-center justify-center"
          >
            {d9 !== "" && (
              <p
                className={` text-4xl md:text-6xl ${
                  d9 === "x" ? "text-blue-500" : "text-red-500"
                }`}
              >
                {d9}
              </p>
            )}
          </div>
        </div>
        {winner !== "" && (
          <div className="flex flex-col space-y-3 items-center">
            <p className=" text-3xl">winner : {winner}</p>
            <button
              className=" text-xl md:text-3xl bg-blue-500 rounded-lg md:rounded-xl pb-2 pt-1 md:pb-3 md:pt-2 px-5 text-white hover:bg-blue-600"
              onClick={resetGame}
            >
              retry
            </button>
          </div>
        )}
      </main>
    </>
  );
}
